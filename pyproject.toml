[tool.poetry]
name = "async-asgi-testclient"
version = "1.4.9"
repository = "https://github.com/LucidDan/async-asgi-testclient"
description = "Async client for testing ASGI web applications"
authors = ["Jordi Masip <jordi@masip.cat>"]
readme = "README.md"
license = "MIT"
keywords = ["asgi", "async", "testclient"]
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
packages = [
    { include = "async_asgi_testclient" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"

multidict = ">=4.0,<6.0"
requests = "~=2.21"

[tool.poetry.dev-dependencies]
quart = "==0.10.0"
starlette = "==0.12.13"
python-multipart = "==0.0.5"
pytest = "==6.2.5"
pytest-asyncio = "==0.15.0"
pytest-cov = "==2.8.1"
black = "==19.10b0"
flake8 = "~=3.8.0"
mypy = "==0.761"
isort = "==4.3.21"


[tools.coverage.run]
source = [ "async_asgi_testclient/" ]
omit = [ "tests/*", "async_asgi_testclient/compatibility.py" ]
branch = "True"
parallel = "False"
timid = "False"


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
xfail_strict = "True"


[tool.isort]
force_single_line = true
sections = ["THIRDPARTY","FIRSTPARTY","LOCALFOLDER","STDLIB"]
no_lines_before = ["LOCALFOLDER","THIRDPARTY","FIRSTPARTY","STDLIB"]
force_alphabetical_sort = true
#profile = "black"


[build-system]
# https://github.com/pypa/pip/issues/10742
# https://github.com/pypa/setuptools/issues/2980#issuecomment-999040464
# https://github.com/python-poetry/poetry/issues/4915
# For now, we include setuptools in build requires to work around above issue(s)
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"

# Not using tox in the Github Actions CI, but it provides similar functionality for
# doing local matrix testing
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py37, py38, py39, py310

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest tests/
"""
